{"version":3,"sources":["webpack://to_do_list/./src/DOMcontroller.js","webpack://to_do_list/./src/index.js","webpack://to_do_list/./src/logicController.js","webpack://to_do_list/webpack/bootstrap","webpack://to_do_list/webpack/runtime/define property getters","webpack://to_do_list/webpack/runtime/hasOwnProperty shorthand","webpack://to_do_list/webpack/runtime/make namespace object","webpack://to_do_list/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,KAAK,qEAA+B,CAAC;AAC1D;AACA,yDAAyD,EAAE;AAC3D,uCAAuC,8DAAwB;AAC/D;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,4EAAsC;AACjE;AACA;;AAEA;AACA;AACA,sBAAsB,KAAK,8DAAwB,4BAA4B;AAC/E;AACA;AACA,oCAAoC,8DAAwB;AAC5D,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,gCAAgC,8DAAwB;;AAExD;AACA;AACA,qCAAqC,8DAAwB;;AAE7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,uEAAiC;AACzC;;AAEA;AACA;AACA;AACA,QAAQ,oEAA8B;AACtC;;;;AAIA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA,CAAC;;AAED,iEAAe,aAAa,E;;;;;;;;;;;;;;;;ACpHgB;AACI;;AAEhD,gEAA0B;AAC1B,6DAAuB;AACvB,6DAAuB;AACvB,gEAA0B;AAC1B,6DAAuB;AACvB,gEAA0B;AAC1B,6DAAuB;;AAEvB,uEAAiC,G;;;;;;;;;;;;;;;;;;ACXjC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;AAGD,iEAAe,eAAe,E;;;;;;UCjF9B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["import logicController from './logicController';\n\nconst DOMController = (() => {\n\n    const renderProjectTitles = () => {\n        //grab div containing list of projects\n        let projList = document.getElementById('projectList');\n        let allProjectTitles = document.createDocumentFragment();\n\n        //render those project titles to the DOM\n        //adding event listeners as the divs are added\n        for(let i= 0; i < logicController.projects.length; i++) {\n            let projectTitle = document.createElement('ul');\n            projectTitle.setAttribute('data-projNum', `${i}`);\n            projectTitle.textContent = logicController.projects[i].title;\n            projectTitle.classList.add('project');\n            projectTitle.addEventListener('click', (e) => {\n                setCurrentProjectOnClick(e);\n                displayActiveProject(e);\n                renderTaskTitles(e);\n                \n            });\n            allProjectTitles.appendChild(projectTitle);\n        }\n        projList.appendChild(allProjectTitles);\n    }\n\n    const renderTaskTitles = (e) => {\n        //grab tasklist div\n        let taskList = document.querySelector('#taskList');\n        //grab index of project \n        let projectIndex = logicController.getCurrentProjectIndex();\n        //clear previous task list before rendering new one\n        clearDisplay(taskList);\n        \n        //render current task titles (shown) and task details (hidden)\n        let tasksAndDeets = document.createDocumentFragment();\n        for(let i = 0; i < logicController.projects[projectIndex].tasks.length; i++) {\n            //title of tasks\n            let taskTitle = document.createElement('div');\n            taskTitle.textContent = logicController.projects[projectIndex].tasks[i].title;\n            taskTitle.setAttribute('data-taskNum', `${i}`);\n            taskTitle.classList.add('task');\n            taskTitle.addEventListener('click', (e) => {\n                //prevent children from inheriting the onclick event\n                if (e.currentTarget !== e.target) {\n                    return;\n                }\n                setCurrentTaskOnClick(e);\n                renderTaskDetails(e);\n            });\n\n            //task notes\n            let notes = document.createElement('div');\n            notes.textContent = logicController.projects[projectIndex].tasks[i].notes;\n\n            //task completion y/n\n            let isComplete = document.createElement('div');\n            isComplete.textContent = logicController.projects[projectIndex].tasks[i].isComplete;\n\n            //wrapper for task details\n            let taskDetails = document.createElement('div');\n            taskDetails.classList.add('taskDetails');\n            taskDetails.classList.add('hidden');\n            taskDetails.appendChild(notes);\n            taskDetails.appendChild(isComplete);\n\n            //add task title and info to DOM\n            taskTitle.appendChild(taskDetails);\n            tasksAndDeets.appendChild(taskTitle);\n\n        }\n        taskList.appendChild(tasksAndDeets);\n\n    }\n\n    const displayActiveProject = (e) => {\n         //display title of project above task list\n         let projTitleDisplay = document.querySelector('#projTitle');\n         projTitleDisplay.textContent = e.target.textContent;\n    }\n\n    const renderTaskDetails = (e) => {\n        let taskDeets = e.target.querySelector('.taskDetails');\n        taskDeets.classList.toggle('hidden');\n        \n    }\n\n    //sets the current project for later retrieval of index\n    const setCurrentProjectOnClick = (e) => {\n        let projectIndex = e.target.getAttribute('data-projNum');\n        logicController.setCurrentProject(projectIndex);\n    }\n\n    //sets the current task for later retrieval of index\n    const setCurrentTaskOnClick = (e) => {\n        let taskIndex = e.target.getAttribute('data-taskNum');\n        logicController.setCurrentTask(taskIndex);\n    }\n\n\n\n    const clearDisplay = (parent) => {\n        while (parent.firstChild) {\n            parent.removeChild(parent.firstChild)\n        }\n    \n    }\n    \n\n    return {\n        renderProjectTitles\n    }\n\n})();\n\nexport default DOMController;","import DOMController from './DOMcontroller';\nimport logicController from './logicController';\n\nlogicController.addProject('daily living');\nlogicController.addTask(0, 'take a dump', 'I have to do this', false);\nlogicController.addTask(0, 'get out of bed', 'No choice', false);\nlogicController.addProject('life goals');\nlogicController.addTask(1, 'party a lot', 'drinking is good', false);\nlogicController.addProject('obligations');\nlogicController.addTask(2, 'go to school', 'learning is good', false);\n\nDOMController.renderProjectTitles();","const logicController = (() => {\n\n    let currentProject = null;\n    let currentTask = null;\n\n    let projects = [];\n\n    const projectFactory = (title) => {\n        let tasks = [];\n        return {title, tasks};\n    }\n\n    const taskFactory = (title, notes, isComplete) => {\n        return {title, notes, isComplete};\n    }\n\n    const addProject = (title) => {\n        projects.push(projectFactory(title));\n\n    }\n\n    const editProject = (projectIndex, title) => {\n        projects[projectIndex].title = title;\n    }\n\n\n    const setCurrentProject = (index) => {\n        currentProject = projects[index];\n    }\n\n    const getCurrentProjectIndex = () => {\n        return projects.indexOf(currentProject);\n    }\n\n\n    const setCurrentTask = (index) => {\n        currentTask = currentProject.tasks[index];\n    }\n\n    const getCurrentTaskIndex = () => {\n        return currentProject.tasks.indexOf(currentTask);\n    }\n\n    const addTask = (projectIndex, title, notes, isComplete) => {\n        projects[projectIndex].tasks.push(taskFactory(title, notes, isComplete));\n    }\n\n    const editTaskTitle = (projectIndex, taskIndex, title) => {\n        projects[projectIndex].tasks[taskIndex].title = title;\n    }\n\n\n    const editTaskNotes = (projectIndex, taskIndex, notes) => {\n        project[projectIndex].tasks[taskIndex].notes = notes;\n    }\n\n    const toggleComplete = (projectIndex, taskIndex) => {\n        if (project[projectIndex].tasks[taskIndex].isComplete) {\n            project[projectIndex].tasks[taskIndex].isComplete = false;\n        } else {\n            project[projectIndex].tasks[taskIndex].isComplete = true;\n        }\n    }\n\n    return {\n        projects,\n        setCurrentProject,\n        getCurrentProjectIndex,\n        setCurrentTask,\n        getCurrentTaskIndex,\n        addProject,\n        editProject,\n        addTask,\n        editTaskTitle,\n        editTaskNotes,\n        toggleComplete\n    }\n\n})();\n\n\nexport default logicController;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}